{"version":3,"sources":["components/Hello.js","components/World.js","components/HelloWorld.js","components/Counter.js","components/List.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Hello","React","Component","World","name","this","props","HelloWorld","Counter","count","List","id","map","item","Button","onClick","e","handleClick","preventDefault","update","App","useState","setCount","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAUeA,E,uKANX,OACE,6C,GAHcC,IAAMC,WCSXC,E,uKAPX,IAAMC,EAAOC,KAAKC,MAAMF,KACxB,OACEA,EAAO,+BAAOA,IAAe,6C,GAJfH,IAAMC,WCcXK,E,uKAVX,OACE,8BACE,+BACE,cAAC,EAAD,IADF,OACgB,cAAC,EAAD,CAAOH,KAAK,kB,GALXH,IAAMC,WCOhBM,E,uKAPX,IAAMC,EAAQJ,KAAKC,MAAMG,MACzB,OACE,2CAAcA,S,GAJER,IAAMC,WCwBbQ,E,uKAlBX,OACE,gCACE,sCACA,6BAPU,CACZ,CAACC,GAAI,EAAGP,KAAM,OACd,CAACO,GAAI,EAAGP,KAAM,QAMHQ,KAAI,SAACC,GACV,OACE,6BACGA,EAAKT,MADCS,EAAKF,gB,GAZTV,IAAMC,WCcVY,E,uKAbH,IAAD,OACDV,EAAOC,KAAKC,MAAMF,KACxB,OACE,wBAAQW,QAAS,SAACC,GAAD,OAAO,EAAKC,YAAYD,IAAzC,SAA8CZ,M,kCAItCY,GACVA,EAAEE,iBACFb,KAAKC,MAAMa,a,GAVMlB,IAAMC,WCwCZkB,MAnCf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNZ,EADM,KACCa,EADD,KAcb,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,+DACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEd,MAAOA,IAET,cAAC,EAAD,CACEL,KAAK,gBACLe,OAtBY,WAChBG,EAASb,EAAQ,MAuBf,cAAC,EAAD,CACEL,KAAK,gBACLe,OAtBY,WACF,IAAVV,GAGJa,EAASb,EAAQ,UCNNe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2da3ac8e.chunk.js","sourcesContent":["import React from 'react';\n\nclass Hello extends React.Component {\n  render() {\n    return (\n      <span>Hello</span>\n    )\n  }\n}\n\nexport default Hello;\n","import React from 'react';\n\nclass World extends React.Component {\n  render() {\n    const name = this.props.name;\n    return (\n      name ? <span>{name}</span> : <span>World</span>\n    )\n  }\n}\n\nexport default World;\n","import React from 'react';\nimport Hello from \"./Hello\";\nimport World from \"./World\";\n\nclass HelloWorld extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>\n          <Hello/>&nbsp;<World name=\"Fred\"/>\n        </h2>\n      </div>\n    )\n  }\n}\n\nexport default HelloWorld\n","import React from 'react';\n\nclass Counter extends React.Component {\n  render() {\n    const count = this.props.count;\n    return (\n      <h3>Counter: {count}</h3>\n    )\n  }\n}\n\nexport default Counter;\n","import React from 'react';\n\nclass List extends React.Component {\n  render() {\n    const items = [\n      {id: 1, name: \"one\"},\n      {id: 2, name: \"two\"}\n    ];\n    return (\n      <div>\n        <h3>List</h3>\n        <ul>\n          {items.map((item) => {\n            return (\n              <li key={item.id}>\n                {item.name}\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n\n    )\n  }\n}\n\nexport default List;\n","import React from 'react';\n\nclass Button extends React.Component {\n  render() {\n    const name = this.props.name;\n    return (\n      <button onClick={(e) => this.handleClick(e)}>{name}</button>\n    )\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.props.update();\n  }\n}\n\nexport default Button\n","import React, {useState} from \"react\";\nimport './App.css';\nimport HelloWorld from \"./components/HelloWorld\";\nimport Counter from \"./components/Counter\";\nimport List from \"./components/List\";\nimport Button from \"./components/Button\";\n\nfunction App() {\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  }\n\n  const decrement = () => {\n    if (count === 0) {\n      return;\n    }\n    setCount(count - 1);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Hello world</h1>\n      <p>This is a hello world example!</p>\n      <HelloWorld/>\n      <List/>\n      <Counter\n        count={count}\n      />\n      <Button\n        name=\"Increment (+)\"\n        update={increment}\n      />\n      <Button\n        name=\"Decrement (-)\"\n        update={decrement}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}